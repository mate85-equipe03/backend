services:
  api:
    build:
      dockerfile: Dockerfile
      context: .
      # Roda a imagem de desenvolvimento
      target: development
    env_file:
      - .env
    volumes:
      - .:/usr/src/app
    # Run a command against the development stage of the image
    command: npm run start:dev:migrate
    ports:
      - ${PORT}:3000
    depends_on:
      - database-postgres

  database-postgres:
    image: postgres:14.5
    restart: always
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${DATABASE_NAME}
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
    ports:
      - ${DATABASE_PORT}:5432
    volumes:
      - database_postgres_data:/var/lib/postgresql/data

  adminer:
    image: adminer:4.8.1
    env_file:
      - .env
    ports:
      - ${ADMINER_PORT}:8080
    depends_on:
      - database-postgres

  s3-local:
    image: scireum/s3-ninja:8.1.0
    env_file:
      - .env
    ports:
      - ${S3_PORT}:9000
    command: /bin/sh /home/sirius/app/entrypoint.sh
    volumes:
      - ./s3-local-entrypoint.sh:/home/sirius/app/entrypoint.sh
      - ./s3-local.conf:/tmp/application.conf
      - s3-local:/home/sirius/data 


volumes:
  s3-local: {}
  database_postgres_data: {}
